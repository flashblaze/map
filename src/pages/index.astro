---
import { eq } from "drizzle-orm";
import Map from "../components/Map.tsx";
import { createDB } from "../db";
import { locationTable } from "../db/schema";

const db = createDB(Astro.locals.runtime.env);
const latitude = Astro.request.headers.get("cf-iplatitude") ?? "0";
const longitude = Astro.request.headers.get("cf-iplongitude") ?? "0";
const city = Astro.request.headers.get("cf-ipcity") ?? "";
const region = Astro.request.headers.get("cf-region") ?? "";
const regionCode = Astro.request.headers.get("cf-region-code") ?? "";
const country = Astro.request.headers.get("cf-ipcountry") ?? "";
const ip = Astro.request.headers.get("cf-connecting-ip") ?? "";
const hash = `${latitude}-${longitude}-${city}-${region}-${regionCode}-${country}-${ip}`;

const existingLocation = await db
  .select()
  .from(locationTable)
  .where(eq(locationTable.hash, hash));

const now = new Date();
const rateLimitWindow = 5 * 60 * 1000;

if (existingLocation.length === 0 && latitude !== "0" && longitude !== "0") {
  await db.insert(locationTable).values({
    latitude: parseFloat(latitude),
    longitude: parseFloat(longitude),
    city,
    region,
    regionCode,
    country,
    hash,
    count: 1,
    lastVisit: now,
  });
} else if (latitude !== "0" && longitude !== "0") {
  const lastVisit = existingLocation[0]?.lastVisit
    ? new Date(existingLocation[0].lastVisit)
    : now;
  const timeSinceLastVisit = now.getTime() - lastVisit.getTime();

  if (timeSinceLastVisit >= rateLimitWindow) {
    await db
      .update(locationTable)
      .set({
        count: existingLocation[0].count + 1,
        lastVisit: now,
      })
      .where(eq(locationTable.hash, hash));
  }
}

const locations = await db.select().from(locationTable);

const data = locations.map((location) => [
  location.longitude,
  location.latitude,
  location.count,
]) as [number, number, number][];
---

<html lang="en">
  <head>
    <title>MapViz</title>
    <link rel="icon" href="/favicon.ico" />
    <meta name="description" content="Visitor heatmap" /><meta
      name="viewport"
      content="width=device-width, initial-scale=1.0"
    /><meta name="twitter:card" content="summary" /><meta
      name="twitter:creator"
      content="@neeraj_artx"
    /><meta name="twitter:title" content="MapViz" /><meta
      name="twitter:description"
      content="Visitor heatmap"
    />
    <link
      href="https://unpkg.com/maplibre-gl@3.6.0/dist/maplibre-gl.css"
      rel="stylesheet"
    />
  </head>
</html>

<Map
  client:only="preact"
  data={data}
  longitude={parseFloat(longitude)}
  latitude={parseFloat(latitude)}
/>

<style>
  body {
    margin: 0;
    font-family: sans-serif;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
  }
</style>
